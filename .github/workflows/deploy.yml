name: PassGo Backend CI/CD

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install pnpm
        run: npm install -g pnpm@9.15.1

      - name: Install dependencies üì¶
        run: pnpm install

      - name: Run tests üß™
        run: pnpm run test

      - name: Build the NestJS project üõ†Ô∏è
        run: pnpm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/passgo-be:latest -t ${{ secrets.DOCKER_USERNAME }}/passgo-be:${{ github.sha }} .

      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/passgo-be:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/passgo-be:${{ github.sha }}

  # Deploy to AWS EC2
  # Uncomment when ready to deploy
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'

  #   steps:
  #       - name: Deploy to AWS EC2
  #         uses: appleboy/ssh-action@v0.1.6
  #         with:
  #           host: ${{ secrets.EC2_IP }}
  #           username: ubuntu
  #           key: ${{ secrets.EC2_SSH_KEY }}
  #           port: 22
  #           script: |
  #             echo "Stopping and removing old container..."
  #             CONTAINER_ID=$(docker ps -q --filter "ancestor=${{ secrets.DOCKER_USERNAME }}/passgo-be:latest")
  #             if [ ! -z "$CONTAINER_ID" ]; then
  #               docker stop $CONTAINER_ID
  #               docker rm $CONTAINER_ID
  #             fi

  #             echo "Removing old Docker image..."
  #             IMAGE_ID=$(docker images -q ${{ secrets.DOCKER_USERNAME }}/passgo-be:latest)
  #             if [ ! -z "$IMAGE_ID" ]; then
  #               docker rmi -f $IMAGE_ID
  #             fi

  #             echo "Pulling new Docker image..."
  #             docker pull ${{ secrets.DOCKER_USERNAME }}/passgo-be:latest

  #             echo "Running new container..."
  #             docker run -d -p 8080:8080 --name passgo-be \
  #               -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
  #               -e MONGO_URI=${{ secrets.MONGO_URI }} \
  #               -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
  #               -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
  #               -e AWS_REGION=${{ secrets.AWS_REGION }} \
  #               ${{ secrets.DOCKER_USERNAME }}/passgo-be:latest
